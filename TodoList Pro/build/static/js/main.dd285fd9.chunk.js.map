{"version":3,"sources":["Components/Inner Component/Input.js","Components/Inner Component/EachTodo.js","Components/Inner Component/List.js","Components/App.js","index.js"],"names":["Input","props","sendProps","sendKeyProps","setInput","className","style","margin","id","type","name","placeholder","onChange","onKeyUp","autoComplete","required","onClick","aria-label","role","EachTodo","completed","Todo","updateTodo","removeTodo","useState","Id","setId","useEffect","comp","data-id","checked","background","height","width","opacity","transform","display","fontWeight","List","TodoListArray","length","TodoBlocks","map","eachTodo","index","key","App","setTodo","setTodoListArray","done","setDone","progress","setProgress","setSend","prev","document","getElementById","value","uuid","v4","DoneTodos","filter","arr","Math","floor","isNaN","x1","y1","x2","y2","offset","stopColor","cx","cy","r","strokeDashoffset","disabled","undefined","alert","focus","keyCode","target","ReactDOM","render"],"mappings":"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","file":"static/js/main.dd285fd9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Input({ props: { sendProps, sendKeyProps, setInput } }) {\r\n    return (\r\n        <div className=\"inputBlock\" style={{ margin: \"15px 0px\" }}>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    id=\"inputBox\"\r\n                    type=\"text\"\r\n                    name=\"inputBlock\"\r\n                    placeholder=\"What Do you want Todo?...\"\r\n                    onChange={setInput}\r\n                    onKeyUp={sendKeyProps}\r\n                    autoComplete=\"off\"\r\n                    required=\"required\"\r\n                />\r\n                <div className=\"input\"></div>\r\n            </div>\r\n            <div className=\"plus\" onClick={sendProps}>\r\n                <span aria-label=\"addTodo\" role=\"img\">\r\n                    &#10133;\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EachTodo({\r\n    props: {\r\n        EachTodo: { id, completed, Todo },\r\n        updateTodo,\r\n        removeTodo,\r\n    },\r\n}) {\r\n    const [Id, setId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setId(id);\r\n    }, [Todo, id]);\r\n    var comp = completed;\r\n    var Done = {\r\n        opacity: 0.4,\r\n        transform: \"skewx(-20deg)\",\r\n    };\r\n\r\n    var span1 = {\r\n        height: 12,\r\n    };\r\n    var span2 = {\r\n        width: 22,\r\n    };\r\n    return (\r\n        <div className=\"label\" data-id={`${Id}`}>\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-id={`${Id}`}\r\n                    checked={comp}\r\n                    onChange={() => {\r\n                        updateTodo(Id);\r\n                    }}\r\n                />\r\n                <div className=\"Todo\">\r\n                    <div className=\"checkbox\" style={{ background: comp ? \"#333\" : null }}>\r\n                        <div className=\"checkbox_inner\">\r\n                            <span style={comp ? span1 : null}></span>\r\n                            <span style={comp ? span2 : null}></span>\r\n                        </div>\r\n                    </div>\r\n                    <span style={comp ? Done : null}>\r\n                        {Todo} <span className=\"cross\"></span>\r\n                    </span>\r\n                </div>\r\n            </label>\r\n            <div\r\n                className={\"close\"}\r\n                style={{ display: comp ? \"inline-grid\" : \"none\", fontWeight: \"bolder\" }}\r\n                onClick={() => {\r\n                    removeTodo(Id);\r\n                }}\r\n                data-id={Id}\r\n            >\r\n                &#10005;\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EachTodo;\r\n","import React from \"react\";\r\n// import uuid from \"uuid\";\r\nimport EachTodo from \"./EachTodo\";\r\n\r\nfunction List({ props: { removeTodo, updateTodo, TodoListArray } }) {\r\n    if (TodoListArray.length === 0) return <div className=\"listContainer\"></div>;\r\n\r\n    var TodoBlocks = TodoListArray.map((eachTodo, index) => {\r\n        return (\r\n            <EachTodo\r\n                key={index}\r\n                props={{\r\n                    EachTodo: eachTodo,\r\n                    updateTodo: updateTodo,\r\n                    removeTodo: removeTodo,\r\n                }}\r\n            />\r\n        );\r\n    });\r\n\r\n    return <div className=\"listContainer\">{TodoBlocks}</div>;\r\n}\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport Input from \"./Inner Component/Input\";\r\nimport List from \"./Inner Component/List\";\r\n\r\nexport default function App() {\r\n    const [Todo, setTodo] = useState({});\r\n    const [TodoListArray, setTodoListArray] = useState([]);\r\n    const [done, setDone] = useState(0);\r\n    const [progress, setProgress] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const DoneTodos = TodoListArray.filter((arr) => {\r\n            return arr.completed === true;\r\n        });\r\n        var progress, length;\r\n        progress = length = Math.floor((DoneTodos.length / TodoListArray.length) * 100);\r\n        isNaN(progress) ? (progress = 0) : (progress = length);\r\n\r\n        setProgress(progress);\r\n        setDone(DoneTodos.length);\r\n    }, [progress, TodoListArray]);\r\n\r\n    function sendProps() {\r\n        Todo.Todo === undefined ? alert(\"Fill Box\") : setSend();\r\n        document.getElementById(\"inputBox\").focus();\r\n    }\r\n    function sendKeyProps({ keyCode }) {\r\n        if (Todo.Todo !== undefined) {\r\n            if (keyCode === 13) setSend();\r\n        } else alert(\"Fill Box\");\r\n    }\r\n\r\n    function setSend() {\r\n        setTodo((prev) => {\r\n            return {};\r\n        });\r\n        document.getElementById(\"inputBox\").value = null;\r\n        Todo.id = uuid.v4();\r\n        Todo.completed = false;\r\n        setTodoListArray((prev) => [...prev, Todo]);\r\n    }\r\n\r\n    function setInput({ target: { value } }) {\r\n        setTodo({ Todo: value });\r\n    }\r\n\r\n    function updateTodo(id) {\r\n        setTodoListArray(\r\n            TodoListArray.map((arr) => {\r\n                if (arr.id === id) {\r\n                    arr.completed = !arr.completed;\r\n                }\r\n                return arr;\r\n            })\r\n        );\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodoListArray(\r\n            TodoListArray.filter((arr) => {\r\n                return arr.id !== id;\r\n            })\r\n        );\r\n    }\r\n\r\n    function clearDone() {\r\n        setTodoListArray(\r\n            TodoListArray.filter((arr) => {\r\n                return arr.completed === false;\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"control\">\r\n                <div className=\"box\">\r\n                    <div className=\"percent\">\r\n                        <svg>\r\n                            <linearGradient id=\"grad\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"100%\">\r\n                                <stop offset=\"0%\" stopColor=\"#ff0612\"></stop>\r\n                                <stop offset=\"100%\" stopColor=\"#6544ff\"></stop>\r\n                            </linearGradient>\r\n                            <circle cx=\"50%\" cy=\"50%\" r=\"40\" className=\"dark\"></circle>\r\n\r\n                            <circle\r\n                                cx=\"50%\"\r\n                                cy=\"50%\"\r\n                                r=\"40\"\r\n                                style={{ strokeDashoffset: 251 - (251 * progress) / 100 }}\r\n                            ></circle>\r\n                        </svg>\r\n                        <div className=\"number\">\r\n                            {progress !== 0 || TodoListArray.length !== 0 ? (\r\n                                <>\r\n                                    <h2>\r\n                                        {progress}\r\n                                        <span>%</span>\r\n                                    </h2>\r\n                                    <span className=\"comp\">completed</span>\r\n                                </>\r\n                            ) : (\r\n                                <h2 className=\"empty\">No Task</h2>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"text\">Progress</div> */}\r\n                </div>\r\n                <button\r\n                    onClick={clearDone}\r\n                    disabled={done === 0 ? true : false}\r\n                    className={done === 0 ? \"disable\" : \"clear\"}\r\n                >\r\n                    &#10005; Clear Done\r\n                </button>\r\n            </div>\r\n            <Input\r\n                props={{\r\n                    sendProps: sendProps,\r\n                    sendKeyProps: sendKeyProps,\r\n                    setInput: setInput,\r\n                }}\r\n            />\r\n            <List\r\n                props={{\r\n                    removeTodo: removeTodo,\r\n                    updateTodo: updateTodo,\r\n                    TodoListArray: TodoListArray,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./Components/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}